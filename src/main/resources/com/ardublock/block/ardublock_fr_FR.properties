# BlockConnector label
bc.pin_number=broche#
bc.status=status
bc.test=Teste
bc.then=Alors \u221a\u00a9xecute..
bc.to=Nouvelle fourchette de valeurs
bc.value=valeur
bc.variable=Nom de la variable
bc.angle=angle
bc.base=base
bc.condition=Teste la condition
bc.else=Sinon \u221a\u00a9x\u221a\u00a9cute
bc.exponent=exponent
bc.from=Fourchette de valeur actuelle
bc.level=level
bc.max=Nombre max
bc.microseconds=Microsecondes
bc.milliseconds=Millisecondes

# BlockDrawer name
bd.control=Contr\u221a\u00a5les
bd.dfrobot=DFRobot
bd.number=Variables/Constantes
bd.operators=Operateurs Math
bd.pins=Broches
bd.seeedstudio=Seeedstudio Grove
bd.tinkerkit=Blocs TinkerKit
bd.utilities=Utilitaires

bg.number=1
bg.digital-high=HAUT
bg.digital-low=BAS
bg.digital-on=ON
bg.digital-off=OFF
bg.true=VRAI
bg.false=FAUX
bg.message=message
bg.glue_sn=glue
bg.glue_sb=glue
bg.loop=boucle
bg.pin-read-digital=Valeur de la broche Entree num\u221a\u00a9rique
bg.pin-read-analog=Valeur de la broche Entree Analogique
bg.pin-write-digital=Fixe la sortie num\u221a\u00a9rique au niveau
bg.setter_variable_number=D\u221a\u00a9clare une variable num\u221a\u00a9rique
bg.variable_number=Nom de la variable num\u221a\u00a9rique
bg.setter_variable_digital=D\u221a\u00a9clare la variable bool\u221a\u00a9ene (HAUT ou BAS)
bg.variable_digital=Nom de la variable bool\u221a\u00a9ene (HAUT-BAS ou VRAI-FAUX)
bg.pin-write-analog=Fixe la sortie analogique \u221a\u2020 la valeur : 
bg.servo=Servomoteur
bg.ultrasonic=Capteur Ultrason
bg.if=Si
bg.ifelse=Si - Sinon
bg.while=Tant que...
bg.repeat_times=R\u221a\u00a9p\u221a\u00aete
bg.and=ET
bg.or=OU
bg.not=NON
bg.addition=+
bg.subtraction=-
bg.multiplication=x
bg.division=\u221a\u2211
bg.modulo=%
bg.min=min
bg.max=max
bg.greater=>
bg.less=<
bg.equal==
bg.greater_equal=>=
bg.less_equal=<=
bg.not_equal=!=
bg.abs=abs
bg.pow=power
bg.sqrt=sqrt
bg.sin=sin
bg.cos=cos
bg.tan=tan
bg.delay=D\u221a\u00a9lais en milliseconde
bg.delay_microseconds=D\u221a\u00a9lais en microsecondes
bg.random=Nombre al\u221a\u00a9atoire
bg.millis=Temps depuis le d\u221a\u00a9marrage de la carte (millis)
bg.serial_println=Ecris sur le port s\u221a\u00a9rie un message
bg.map_common=R\u221a\u00a9\u221a\u00a9talonne de [0 \u221a\u2020 1023] en [0 \u221a\u2020 255]
bg.map=R\u221a\u00a9\u221a\u00a9talonne...
bg.wire_read=I2C Read
bg.wire_write=I2C Write
bg.wire_isread=I2C read ok?
bg.Tinker_LED=LED
bg.Tinker_LED_pwm=LED
bg.Tinker_Mosfet=Mosfet
bg.Tinker_Mosfet_pwm=Mosfet
bg.Tinker_Relay=Relay
bg.Tinker_Servo=Servo
bg.Tinker_Button=Button
bg.Tinker_Accmeter=Accelerometer
bg.Tinker_Hall=Hall
bg.Tinker_LDR=LDR
bg.Tinker_LinearPotentiometer=LinearPotentiometer
bg.Tinker_RotaryPotentiometer=RotaryPotentiometer
bg.Tinker_Thermistor=Thermistor
bg.Tinker_Touch=Touch
bg.Tinker_Servo=Servo
bg.Tinker_Tilt=Tilt
bg.xcj_motor_forward=motor shield <br> forward
bg.xcj_motor_backward=motor shield <br> backward
bg.xcj_ms_digital_write=Xinchejian digitalWrite
bg.xcj_ms_digital_read=Xinchejian digitalRead
